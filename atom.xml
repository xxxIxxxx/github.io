<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-14T07:08:53.641Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序引入模块</title>
    <link href="http://example.com/2021/01/14/600-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BC%95%E5%85%A5%E6%A8%A1%E5%9D%97/"/>
    <id>http://example.com/2021/01/14/600-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BC%95%E5%85%A5%E6%A8%A1%E5%9D%97/</id>
    <published>2021-01-14T07:05:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建一个模块-utils-appConfig-js"><a href="#创建一个模块-utils-appConfig-js" class="headerlink" title="创建一个模块 utils/appConfig.js"></a>创建一个模块 utils/appConfig.js</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const appConfig &#x3D; &#123;</span><br><span class="line">  host: &#39;https:&#x2F;&#x2F;www.baidu.com&#39;,</span><br><span class="line">  sayHi(e) &#123;</span><br><span class="line">    console.log(&#39;hi&#39; + e);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">export default appConfig</span><br></pre></td></tr></table></figure><h1 id="导入创建的模块使用-其他-js-文件内"><a href="#导入创建的模块使用-其他-js-文件内" class="headerlink" title="导入创建的模块使用     其他 .js 文件内"></a>导入创建的模块使用     其他 .js 文件内</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import appConfig from &#39;..&#x2F;..&#x2F;..&#x2F;utils&#x2F;appConfig.js&#39;;</span><br><span class="line">console.log(appConfig.host);</span><br><span class="line">appConfig.sayHi(&#39;朱小明&#39;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建一个模块-utils-appConfig-js&quot;&gt;&lt;a href=&quot;#创建一个模块-utils-appConfig-js&quot; class=&quot;headerlink&quot; title=&quot;创建一个模块 utils/appConfig.js&quot;&gt;&lt;/a&gt;创建一个模块 util</summary>
      
    
    
    
    <category term="微信小程序" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>微信小程序界面跳转传值、反向传值</title>
    <link href="http://example.com/2021/01/14/600-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E7%95%8C%E9%9D%A2%E8%B7%B3%E8%BD%AC%E4%BC%A0%E5%80%BC/"/>
    <id>http://example.com/2021/01/14/600-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E7%95%8C%E9%9D%A2%E8%B7%B3%E8%BD%AC%E4%BC%A0%E5%80%BC/</id>
    <published>2021-01-14T05:40:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="page1-点击事件-wxml"><a href="#page1-点击事件-wxml" class="headerlink" title="page1 点击事件 .wxml"></a>page1 点击事件 .wxml</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;text bind:tap&#x3D;&quot;pushNav&quot;&gt;界面跳转传值&lt;&#x2F;text&gt;</span><br></pre></td></tr></table></figure><h1 id="page1-跳转方法实现-js"><a href="#page1-跳转方法实现-js" class="headerlink" title="page1 跳转方法实现 .js"></a>page1 跳转方法实现 .js</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">pushNav(e) &#123;</span><br><span class="line">    </span><br><span class="line">    let that &#x3D; this;</span><br><span class="line">    wx.navigateTo(&#123;</span><br><span class="line">      &#x2F;&#x2F; 跳转传值方式 1</span><br><span class="line">      url: &#39;..&#x2F;page2?carName&#x3D;&#39; + &#39;特斯拉&#39;,</span><br><span class="line"></span><br><span class="line">      events: &#123;</span><br><span class="line">        &#x2F;&#x2F; 反向传值 page2 回调给 page1 接收处</span><br><span class="line">        getuserInfoClick(e) &#123;</span><br><span class="line">          console.log(e);</span><br><span class="line">          that.setData(&#123; userName: e.userName &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        &#x2F;&#x2F; 跳转传值方式 2</span><br><span class="line">        &#x2F;&#x2F; 这个其实有点类似于通知的意思 定义通知名称 和 参数</span><br><span class="line">        res.eventChannel.emit(&#39;diyfunName&#39;, &#123; parKey: &#39;我是通过 eventChannel 传递的另一个数据&#39; &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h1 id="page2-接收传值，并回传-js"><a href="#page2-接收传值，并回传-js" class="headerlink" title="page2 接收传值，并回传  .js"></a>page2 接收传值，并回传  .js</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">   * 生命周期函数--监听页面加载</span><br><span class="line">   *&#x2F;</span><br><span class="line">  onLoad: function (options) &#123;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 通过方式1 传值接收</span><br><span class="line">    this.setData(&#123; carName: options.carName &#125;);</span><br><span class="line"></span><br><span class="line">    const eventChannel &#x3D; this.getOpenerEventChannel();</span><br><span class="line">    </span><br><span class="line">    let that &#x3D; this;</span><br><span class="line">    &#x2F;&#x2F; 反向传值 page2 传给 page1</span><br><span class="line">    eventChannel.emit(&#39;getuserInfoClick&#39;, &#123; userName: &#39;朱小明&#39; &#125;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; &#x2F;&#x2F; 通过方式2 传值接收</span><br><span class="line">    eventChannel.on(&#39;diyfunName&#39;, function (params) &#123;</span><br><span class="line">      that.setData(&#123; otherPar: params.parKey &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;page1-点击事件-wxml&quot;&gt;&lt;a href=&quot;#page1-点击事件-wxml&quot; class=&quot;headerlink&quot; title=&quot;page1 点击事件 .wxml&quot;&gt;&lt;/a&gt;page1 点击事件 .wxml&lt;/h1&gt;&lt;figure class=&quot;high</summary>
      
    
    
    
    <category term="微信小程序" scheme="http://example.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 路由跳转</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E8%B7%AF%E7%94%B1%E8%B7%B3%E8%BD%AC/</id>
    <published>2020-12-29T02:43:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本路由跳转-加传值"><a href="#基本路由跳转-加传值" class="headerlink" title="基本路由跳转  加传值"></a>基本路由跳转  加传值</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Navigator.of(context).push(MaterialPageRoute(</span><br><span class="line">                builder: (context) &#x3D;&gt; MyRouterPage(title: &#39;首页&#39;),</span><br><span class="line">              ));</span><br></pre></td></tr></table></figure><h1 id="返回"><a href="#返回" class="headerlink" title="返回"></a>返回</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Navigator.of(context).pop();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本路由跳转-加传值&quot;&gt;&lt;a href=&quot;#基本路由跳转-加传值&quot; class=&quot;headerlink&quot; title=&quot;基本路由跳转  加传值&quot;&gt;&lt;/a&gt;基本路由跳转  加传值&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 BottomNavigationBar</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6BottomNavigationBar/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6BottomNavigationBar/</id>
    <published>2020-12-29T02:41:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int index &#x3D; 0;</span><br><span class="line">var pages &#x3D; [HomePage(), SearchPage(), SetPage()];</span><br><span class="line">var titls &#x3D; [Text(&#39;首页&#39;), Text(&#39;搜索&#39;), Text(&#39;设置&#39;)];</span><br></pre></td></tr></table></figure><h1 id="BottomNavigationBar"><a href="#BottomNavigationBar" class="headerlink" title="BottomNavigationBar"></a>BottomNavigationBar</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">BottomNavigationBar(</span><br><span class="line">        selectedItemColor: Colors.orangeAccent,</span><br><span class="line">        iconSize: 34,</span><br><span class="line">        &#x2F;&#x2F; type: BottomNavigationBarType.shifting,</span><br><span class="line">        unselectedItemColor: Colors.grey,</span><br><span class="line">        &#x2F;&#x2F; showSelectedLabels: false,</span><br><span class="line">        &#x2F;&#x2F; showUnselectedLabels: false,</span><br><span class="line">        currentIndex: index,</span><br><span class="line">        onTap: (index) &#123;</span><br><span class="line">          setState(() &#123;</span><br><span class="line">            this.index &#x3D; index;</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        items: [</span><br><span class="line">          BottomNavigationBarItem(</span><br><span class="line">              icon: Icon(Icons.home),</span><br><span class="line">              label: &#39;首页&#39;,</span><br><span class="line">              activeIcon: Icon(</span><br><span class="line">                Icons.home,</span><br><span class="line">                color: Colors.orangeAccent,</span><br><span class="line">              )),</span><br><span class="line">          BottomNavigationBarItem(</span><br><span class="line">              icon: Icon(Icons.search),</span><br><span class="line">              label: &#39;搜索&#39;,</span><br><span class="line">              activeIcon: Icon(</span><br><span class="line">                Icons.search,</span><br><span class="line">                color: Colors.orangeAccent,</span><br><span class="line">              )),</span><br><span class="line">          BottomNavigationBarItem(</span><br><span class="line">              icon: Icon(Icons.settings),</span><br><span class="line">              label: &#39;设置&#39;,</span><br><span class="line">              activeIcon: Icon(</span><br><span class="line">                Icons.settings,</span><br><span class="line">                color: Colors.orangeAccent,</span><br><span class="line">              )),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 StatefulWidget</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Sft/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Sft/</id>
    <published>2020-12-29T02:37:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="StatefulWidget"><a href="#StatefulWidget" class="headerlink" title="StatefulWidget"></a>StatefulWidget</h1><blockquote><p>动态组件，页面可变化 使用  setState(() {});</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">class MyStfWidget extends StatefulWidget implements PageRouterProtocol &#123;</span><br><span class="line">  @override</span><br><span class="line">  final Map arguments;</span><br><span class="line">  MyStfWidget(&#123;Key key, this.arguments&#125;) : super(key: key);</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  _MyStfWidgetState createState() &#x3D;&gt; _MyStfWidgetState(arguments);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class _MyStfWidgetState extends State&lt;MyStfWidget&gt; &#123;</span><br><span class="line">  final Map arguments;</span><br><span class="line"></span><br><span class="line">  List dataList &#x3D; [];</span><br><span class="line"></span><br><span class="line">  _MyStfWidgetState(this.arguments);</span><br><span class="line">  addData() &#123;</span><br><span class="line">    List singleList &#x3D; List();</span><br><span class="line">    for (var i &#x3D; 0; i &lt; 20; i++) &#123;</span><br><span class="line">      singleList.add(&#39;增加数据了&#39;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.dataList.addAll(singleList);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    RaisedButton addBtn &#x3D; RaisedButton(</span><br><span class="line">        child: Text(&#39;加载更多&#39;),</span><br><span class="line">        onPressed: () &#123;</span><br><span class="line">          setState(() &#123;</span><br><span class="line">            this.addData();</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    return Scaffold(</span><br><span class="line">      appBar: AppBar(</span><br><span class="line">        title: Text(arguments[&#39;title&#39;] ?? &#39;默认标题&#39;),</span><br><span class="line">      ),</span><br><span class="line">      body: ListView.builder(</span><br><span class="line">        itemCount: dataList.length + 1,</span><br><span class="line">        itemBuilder: (BuildContext context, int index) &#123;</span><br><span class="line">          if (index &#x3D;&#x3D; 0) &#123;</span><br><span class="line">            return addBtn;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          return Text(&#39;data  $index&#39;);</span><br><span class="line">        &#125;,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;StatefulWidget&quot;&gt;&lt;a href=&quot;#StatefulWidget&quot; class=&quot;headerlink&quot; title=&quot;StatefulWidget&quot;&gt;&lt;/a&gt;StatefulWidget&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;动态组件，页面可变</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 Wrap</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Wrap/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Wrap/</id>
    <published>2020-12-29T02:35:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Wrap"><a href="#Wrap" class="headerlink" title="Wrap"></a>Wrap</h1><blockquote><p>流式布局</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Wrap(</span><br><span class="line">      spacing: 10,</span><br><span class="line">      runSpacing: 10,</span><br><span class="line">      alignment: WrapAlignment.end,</span><br><span class="line">      children: [</span><br><span class="line">        MyButton(&#39;哈哈哈&#39;),</span><br><span class="line">        MyButton(&#39;阿斯顿萨达撒&#39;),</span><br><span class="line">        MyButton(&#39;苏打水萨达撒&#39;),</span><br><span class="line">        MyButton(&#39;阿瑟&#39;),</span><br><span class="line">        MyButton(&#39;萨发送个人舒服舒服当发送的&#39;),</span><br><span class="line">        MyButton(&#39;title&#39;),</span><br><span class="line">        &#x2F;&#x2F;MARK:       MaterialButton</span><br><span class="line">        MaterialButton(</span><br><span class="line">          child: Text(&#39;MaterialButton 风格 btn&#39;),</span><br><span class="line">          shape: CircleBorder(side: BorderSide(width: 100)),</span><br><span class="line">          color: Colors.orange,</span><br><span class="line">          onPressed: () &#123;</span><br><span class="line">            print(&#39;object&#39;);</span><br><span class="line">          &#125;,</span><br><span class="line">        ),</span><br><span class="line">        &#x2F;&#x2F;MARK:IconButton</span><br><span class="line">        IconButton(icon: Icon(Icons.ac_unit), onPressed: null),</span><br><span class="line">        &#x2F;&#x2F;MARK: FlatButton</span><br><span class="line">        FlatButton(onPressed: () &#123;&#125;, child: Text(&#39;扁平化按钮&#39;)),</span><br><span class="line">        FloatingActionButton(</span><br><span class="line">          onPressed: () &#123;&#125;,</span><br><span class="line">          child: Text(&#39;FloatingActionButton&#39;),</span><br><span class="line">        )</span><br><span class="line">      ],</span><br><span class="line">    );</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Wrap&quot;&gt;&lt;a href=&quot;#Wrap&quot; class=&quot;headerlink&quot; title=&quot;Wrap&quot;&gt;&lt;/a&gt;Wrap&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;流式布局&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight p</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 AspectRatio、Card</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6AspectRatio%E3%80%81Card/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6AspectRatio%E3%80%81Card/</id>
    <published>2020-12-29T02:30:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AspectRatio"><a href="#AspectRatio" class="headerlink" title="AspectRatio"></a>AspectRatio</h1><blockquote><p>设置自身比例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">AspectRatio(</span><br><span class="line">        aspectRatio: 5.0 &#x2F; 1.0,</span><br><span class="line">        child: Container(</span><br><span class="line">          child: Text(</span><br><span class="line">            &#39;AspectRatio 宽高比 5&#x2F;1&#39;,</span><br><span class="line">            textAlign: TextAlign.center,</span><br><span class="line">            style: TextStyle(fontSize: 30),</span><br><span class="line">          ),</span><br><span class="line">          color: Colors.greenAccent,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br></pre></td></tr></table></figure><h1 id="Card"><a href="#Card" class="headerlink" title="Card"></a>Card</h1><blockquote><p>卡片样式</p></blockquote><p>```<br>Card(<br>      margin: EdgeInsets.all(10),<br>      shape: RoundedRectangleBorder(<br>          side: BorderSide(color: Colors.orange, width: 2),<br>          borderRadius: BorderRadius.circular(10)),<br>      child: Column(<br>        children: [<br>          AspectRatio(<br>            aspectRatio: 16 / 9,<br>            child: Image.network(<br>              randomImgSrc(),<br>              fit: BoxFit.cover,<br>            ),<br>          ),<br>          Padding(<br>            padding: EdgeInsets.all(12),<br>            child: Row(<br>              crossAxisAlignment: CrossAxisAlignment.baseline,<br>              children: [<br>                ClipOval(<br>                  child: Image.network(randomImgSrc(),<br>                      width: 60, fit: BoxFit.cover),<br>                ),<br>                Container(<br>                  padding: EdgeInsets.fromLTRB(10, 0, 0, 0),<br>                  height: 60,<br>                  child: Stack(<br>                    children: [<br>                      Align(<br>                        alignment: Alignment.topLeft,<br>                        child: Text(<br>                          ‘我是一只大猫’,<br>                          style: TextStyle(<br>                              fontWeight: FontWeight.bold, fontSize: 22),<br>                        ),<br>                      ),<br>                      Align(<br>                        alignment: Alignment.bottomLeft,<br>                        child: Text(‘啦啦啦啦啦啦啦啦啦啦啦啦啦啦啦’),<br>                      )<br>                    ],<br>                  ),<br>                ),<br>                CircleAvatar(<br>                  backgroundImage: NetworkImage(randomImgSrc()),<br>                ),<br>              ],<br>            ),<br>          ),<br>        ],<br>      ),<br>    );<br>``</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;AspectRatio&quot;&gt;&lt;a href=&quot;#AspectRatio&quot; class=&quot;headerlink&quot; title=&quot;AspectRatio&quot;&gt;&lt;/a&gt;AspectRatio&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;设置自身比例&lt;/p&gt;
&lt;/blockquo</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 Stack、Align、Positioned</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Stack%E3%80%81Align%E3%80%81Positioned/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Stack%E3%80%81Align%E3%80%81Positioned/</id>
    <published>2020-12-29T02:25:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Stack(</span><br><span class="line">      &#x2F;&#x2F; alignment: Alignment(-1,-1),</span><br><span class="line">      alignment: Alignment.bottomLeft,</span><br><span class="line">      children: [</span><br><span class="line">        Container(color: Colors.orange, height: 100),</span><br><span class="line">        Text(&#39;单独 Stack 布局只有两个组件&#39;,</span><br><span class="line">            style: TextStyle(color: Colors.white, fontSize: 20)),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><h1 id="Stack-结合-Align-布局"><a href="#Stack-结合-Align-布局" class="headerlink" title="Stack 结合 Align 布局"></a>Stack 结合 Align 布局</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Stack(</span><br><span class="line">        children: [</span><br><span class="line">          Align(</span><br><span class="line">            alignment: Alignment.center,</span><br><span class="line">            child: Text(</span><br><span class="line">              &#39;Stack 结合 Align 布局&#39;,</span><br><span class="line">              style: TextStyle(color: Colors.white, fontSize: 30),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          Align(</span><br><span class="line">            alignment: Alignment.topLeft,</span><br><span class="line">            child: Icon(Icons.ac_unit),</span><br><span class="line">          ),</span><br><span class="line">          Align(</span><br><span class="line">            alignment: Alignment.bottomLeft,</span><br><span class="line">            child: Icon(Icons.ac_unit),</span><br><span class="line">          ),</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br></pre></td></tr></table></figure><h1 id="Stack-结合-Positioned-布局"><a href="#Stack-结合-Positioned-布局" class="headerlink" title="Stack 结合 Positioned 布局"></a>Stack 结合 Positioned 布局</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Stack(</span><br><span class="line">        children: [</span><br><span class="line">          Positioned(</span><br><span class="line">              top: 16,</span><br><span class="line">              left: 16,</span><br><span class="line">              child: Text(</span><br><span class="line">                &#39; Stack 结合 Positioned 布局&#39;,</span><br><span class="line">                style: TextStyle(color: Colors.white, fontSize: 30),</span><br><span class="line">              )),</span><br><span class="line">          Positioned(</span><br><span class="line">              bottom: 10,</span><br><span class="line">              right: 10,</span><br><span class="line">              width: 100,</span><br><span class="line">              height: 100,</span><br><span class="line">              child: Container(</span><br><span class="line">                color: Colors.red,</span><br><span class="line">                child: Icon(Icons.tv),</span><br><span class="line">              ))</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Stack&quot;&gt;&lt;a href=&quot;#Stack&quot; class=&quot;headerlink&quot; title=&quot;Stack&quot;&gt;&lt;/a&gt;Stack&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 Row、Column、Expanded</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Row%E3%80%81Column%E3%80%81Expanded/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6Row%E3%80%81Column%E3%80%81Expanded/</id>
    <published>2020-12-29T02:20:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Row"><a href="#Row" class="headerlink" title="Row"></a>Row</h1><blockquote><p>水平布局</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ow(</span><br><span class="line">        mainAxisAlignment: MainAxisAlignment.spaceEvenly,</span><br><span class="line">        crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">        children: [</span><br><span class="line">          MyIconWidget(Icons.tv, color: Colors.redAccent),</span><br><span class="line">          MyIconWidget(Icons.ac_unit, color: Colors.blueAccent),</span><br><span class="line">          MyIconWidget(Icons.access_alarms, color: Colors.orangeAccent)</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br></pre></td></tr></table></figure><h1 id="Column"><a href="#Column" class="headerlink" title="Column"></a>Column</h1><blockquote><p>垂直布局</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Column(</span><br><span class="line">        mainAxisAlignment: MainAxisAlignment.end,</span><br><span class="line">        crossAxisAlignment: CrossAxisAlignment.end,</span><br><span class="line">        children: [</span><br><span class="line">          MyIconWidget(Icons.tv, color: Colors.redAccent),</span><br><span class="line">          MyIconWidget(Icons.ac_unit, color: Colors.blueAccent),</span><br><span class="line">          MyIconWidget(Icons.access_alarms, color: Colors.orangeAccent)</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br></pre></td></tr></table></figure><h1 id="Expanded"><a href="#Expanded" class="headerlink" title="Expanded"></a>Expanded</h1><blockquote><p>扩展组件 比例分配</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Expanded(</span><br><span class="line">          child: MyIconWidget(Icons.games, color: Colors.blueGrey),</span><br><span class="line">        ),</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> Row(</span><br><span class="line">      children: [</span><br><span class="line">        Expanded(</span><br><span class="line">          flex: 2,</span><br><span class="line">          child: MyIconWidget(Icons.ac_unit, color: Colors.red),</span><br><span class="line">        ),</span><br><span class="line">        Expanded(</span><br><span class="line">          flex: 1,</span><br><span class="line">          child: MyIconWidget(Icons.ac_unit, color: Colors.amberAccent),</span><br><span class="line">        ),</span><br><span class="line">        Expanded(</span><br><span class="line">          flex: 2,</span><br><span class="line">          child: MyIconWidget(Icons.ac_unit, color: Colors.red),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    );</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Row&quot;&gt;&lt;a href=&quot;#Row&quot; class=&quot;headerlink&quot; title=&quot;Row&quot;&gt;&lt;/a&gt;Row&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;水平布局&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 GridView</title>
    <link href="http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6GridView/"/>
    <id>http://example.com/2020/12/29/400-Flutter%E7%BB%84%E4%BB%B6GridView/</id>
    <published>2020-12-29T02:11:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">List&lt;Widget&gt; _getData() &#123;</span><br><span class="line">   var widgetList &#x3D; List&lt;Widget&gt;();</span><br><span class="line">   for (var i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">     var c &#x3D; Container(</span><br><span class="line">       &#x2F;&#x2F; alignment: Alignment.topCenter,</span><br><span class="line">       color: Colors.green[100],</span><br><span class="line">       child: Column(</span><br><span class="line">         children: [</span><br><span class="line">           Image(image: Assets.images.cat),</span><br><span class="line">           SizedBox(</span><br><span class="line">             height: 12,</span><br><span class="line">           ),</span><br><span class="line">           Text(</span><br><span class="line">             &#39;哈哈哈 $i&#39;,</span><br><span class="line">             textAlign: TextAlign.center,</span><br><span class="line">             style: TextStyle(fontSize: 24),</span><br><span class="line">           ),</span><br><span class="line">         ],</span><br><span class="line">       ),</span><br><span class="line">     );</span><br><span class="line">     widgetList.add(c);</span><br><span class="line">   &#125;</span><br><span class="line">   return widgetList;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="GridView-count"><a href="#GridView-count" class="headerlink" title="GridView.count"></a>GridView.count</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GridView.count(</span><br><span class="line">      scrollDirection: Axis.vertical,</span><br><span class="line">      padding: EdgeInsets.fromLTRB(16, 20, 16, 20),</span><br><span class="line">      crossAxisCount: 2,</span><br><span class="line">      crossAxisSpacing: 8,</span><br><span class="line">      mainAxisSpacing: 10,</span><br><span class="line">      childAspectRatio: 0.8,</span><br><span class="line">      children: this._getData(),</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><h1 id="GridView-builder"><a href="#GridView-builder" class="headerlink" title="GridView.builder"></a>GridView.builder</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GridView.builder(</span><br><span class="line">      padding: EdgeInsets.all(10),</span><br><span class="line">      itemCount: _getData().length,</span><br><span class="line">      itemBuilder: (context, index) &#123;</span><br><span class="line">        return _getData()[index];</span><br><span class="line">      &#125;,</span><br><span class="line">      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(</span><br><span class="line">        crossAxisCount: 2,</span><br><span class="line">        childAspectRatio: 0.8,</span><br><span class="line">        mainAxisSpacing: 10,</span><br><span class="line">        crossAxisSpacing: 10,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 ListView</title>
    <link href="http://example.com/2020/12/28/400-Flutter%E7%BB%84%E4%BB%B6ListView/"/>
    <id>http://example.com/2020/12/28/400-Flutter%E7%BB%84%E4%BB%B6ListView/</id>
    <published>2020-12-28T06:35:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ListView(</span><br><span class="line">      padding: EdgeInsets.fromLTRB(18, 20, 18, 50),</span><br><span class="line">      &#x2F;&#x2F; 滑动方向</span><br><span class="line">      scrollDirection: Axis.horizontal,</span><br><span class="line">      children: [</span><br><span class="line">        ListTile(</span><br><span class="line">          leading: Icon(</span><br><span class="line">            Icons.tv,</span><br><span class="line">            color: Colors.amberAccent,</span><br><span class="line">          ),</span><br><span class="line">          trailing: Icon(Icons.ac_unit),</span><br><span class="line">          title: Text(&#39;标题&#39;),</span><br><span class="line">          subtitle: Text(&#39;二级标题啦啦啦啦啦&#39;),</span><br><span class="line">        ),</span><br><span class="line">      ],</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h1 id="ListView-builder"><a href="#ListView-builder" class="headerlink" title="ListView.builder"></a>ListView.builder</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Widget&gt; _getData() &#123;</span><br><span class="line">    List&lt;Widget&gt; widgetList &#x3D; List();</span><br><span class="line">    for (var i &#x3D; 0; i &lt; 30; i++) &#123;</span><br><span class="line">      widgetList.add(Text(</span><br><span class="line">        &#39;$i 哈哈哈哈哈&#39;,</span><br><span class="line">        style: TextStyle(fontSize: 30),</span><br><span class="line">      ));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return widgetList;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  ListView.builder(</span><br><span class="line">      itemCount: _getData().length,</span><br><span class="line">      itemBuilder: (BuildContext context, int index) &#123;</span><br><span class="line">        return _getData()[index];</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ListView&quot;&gt;&lt;a href=&quot;#ListView&quot; class=&quot;headerlink&quot; title=&quot;ListView&quot;&gt;&lt;/a&gt;ListView&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter 组件 Image</title>
    <link href="http://example.com/2020/12/28/400-Flutter%E7%BB%84%E4%BB%B6Image/"/>
    <id>http://example.com/2020/12/28/400-Flutter%E7%BB%84%E4%BB%B6Image/</id>
    <published>2020-12-28T06:20:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Image-本地图片"><a href="#Image-本地图片" class="headerlink" title="Image 本地图片"></a>Image 本地图片</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Image(</span><br><span class="line">        image: Assets.images.cat,</span><br><span class="line">      )</span><br></pre></td></tr></table></figure><h1 id="Image-network-显示网络图片"><a href="#Image-network-显示网络图片" class="headerlink" title="Image.network 显示网络图片"></a>Image.network 显示网络图片</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Image.network(</span><br><span class="line">      &#39;图片url&#39;,</span><br><span class="line">      &#x2F;&#x2F;充满不变形</span><br><span class="line">      fit: BoxFit.cover,</span><br><span class="line">      alignment: Alignment.center,</span><br><span class="line">      color: Colors.blueGrey,</span><br><span class="line">      colorBlendMode: BlendMode.difference,</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h1 id="结合-ClipOval-组件-展示圆图"><a href="#结合-ClipOval-组件-展示圆图" class="headerlink" title="结合 ClipOval 组件 展示圆图"></a>结合 ClipOval 组件 展示圆图</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ClipOval(</span><br><span class="line">      clipBehavior: Clip.antiAliasWithSaveLayer,</span><br><span class="line">      child: Image.network(</span><br><span class="line">        imageUrl,</span><br><span class="line">        &#x2F;&#x2F; width: 200,</span><br><span class="line">        &#x2F;&#x2F; height: 200,ß</span><br><span class="line">        fit: BoxFit.cover,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><h1 id="Container-BoxDecoration-属性生成-圆图"><a href="#Container-BoxDecoration-属性生成-圆图" class="headerlink" title="Container BoxDecoration 属性生成 圆图"></a>Container BoxDecoration 属性生成 圆图</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">      &#x2F;&#x2F; child: networkImage,</span><br><span class="line">      decoration: BoxDecoration(</span><br><span class="line">        borderRadius: BorderRadius.circular(150),</span><br><span class="line">        image: DecorationImage(</span><br><span class="line">          image: NetworkImage(imageUrl),</span><br><span class="line">          fit: BoxFit.cover,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      width: 300,</span><br><span class="line">      height: 300,</span><br><span class="line">    );</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Image-本地图片&quot;&gt;&lt;a href=&quot;#Image-本地图片&quot; class=&quot;headerlink&quot; title=&quot;Image 本地图片&quot;&gt;&lt;/a&gt;Image 本地图片&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Flutter UI 组件 Container、Text</title>
    <link href="http://example.com/2020/12/28/400-Flutter%E7%BB%84%E4%BB%B6Container%E3%80%81Text/"/>
    <id>http://example.com/2020/12/28/400-Flutter%E7%BB%84%E4%BB%B6Container%E3%80%81Text/</id>
    <published>2020-12-28T06:10:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Text、Container 组件较为基础同时使用也很频繁，建议自行封装一套使用，避免每次都要输入很多属性。</p></blockquote><h1 id="Text-文本组件"><a href="#Text-文本组件" class="headerlink" title="Text 文本组件"></a>Text 文本组件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Text(</span><br><span class="line">      &#39;文本组件&#39;,</span><br><span class="line">      textAlign: TextAlign.center,</span><br><span class="line">      overflow: TextOverflow.ellipsis,</span><br><span class="line">      maxLines: 2,</span><br><span class="line">      style: TextStyle(</span><br><span class="line">        fontSize: 20,</span><br><span class="line">        color: Colors.orange,</span><br><span class="line">        fontWeight: FontWeight.bold,</span><br><span class="line">        fontStyle: FontStyle.italic,</span><br><span class="line">        decoration: TextDecoration.underline,</span><br><span class="line">        decorationColor: Colors.black,</span><br><span class="line">        decorationStyle: TextDecorationStyle.dotted,</span><br><span class="line">        letterSpacing: 2,</span><br><span class="line">      ),</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><h1 id="Container-组件"><a href="#Container-组件" class="headerlink" title="Container 组件"></a>Container 组件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">      child: Text(&#39;Container 组件&#39;),</span><br><span class="line">      width: 300,</span><br><span class="line">      height: 300,</span><br><span class="line">      decoration: BoxDecoration(</span><br><span class="line">        color: Colors.redAccent,</span><br><span class="line">        borderRadius: BorderRadius.all(Radius.circular(18)),</span><br><span class="line">        border: Border.all(</span><br><span class="line">          color: Colors.blueAccent,</span><br><span class="line">          width: 7,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">      &#x2F;&#x2F;内边距</span><br><span class="line">      padding: EdgeInsets.all(18),</span><br><span class="line">      &#x2F;&#x2F;外边距</span><br><span class="line">      margin: EdgeInsets.fromLTRB(50, 50, 0, 0),</span><br><span class="line">      &#x2F;&#x2F; transform: Matrix4.translationValues(100, 0, 0),</span><br><span class="line">      transform: Matrix4.rotationZ(0.1),</span><br><span class="line">      alignment: Alignment.bottomLeft,</span><br><span class="line">    )</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Text、Container 组件较为基础同时使用也很频繁，建议自行封装一套使用，避免每次都要输入很多属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Text-文本组件&quot;&gt;&lt;a href=&quot;#Text-文本组件&quot; class=&quot;head</summary>
      
    
    
    
    <category term="Flutter" scheme="http://example.com/categories/Flutter/"/>
    
    
  </entry>
  
  <entry>
    <title>Dart 导入库</title>
    <link href="http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%808/"/>
    <id>http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%808/</id>
    <published>2020-12-27T05:05:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>如果库冲突了 使用 as 重命名   show 导入部分  hide不导入的部分</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import &#39;XXX.dart&#39; as lib show Person;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;如果库冲突了 使用 as 重命名   show 导入部分  hide不导入的部分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr</summary>
      
    
    
    
    <category term="Dart" scheme="http://example.com/categories/Dart/"/>
    
    
  </entry>
  
  <entry>
    <title>Dart 泛型</title>
    <link href="http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%807/"/>
    <id>http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%807/</id>
    <published>2020-12-27T04:02:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法添加泛型"><a href="#方法添加泛型" class="headerlink" title="方法添加泛型"></a>方法添加泛型</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">T getData&lt;T&gt;(T value) &#123;</span><br><span class="line">  return value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="类添加泛型"><a href="#类添加泛型" class="headerlink" title="类添加泛型"></a>类添加泛型</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class Pppp&lt;T&gt; &#123;</span><br><span class="line">  var list &#x3D; List&lt;T&gt;();</span><br><span class="line"></span><br><span class="line">  add(T) &#123;</span><br><span class="line">    list.add(T);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  printList() &#123;</span><br><span class="line">    print(list);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="泛型-接口"><a href="#泛型-接口" class="headerlink" title="泛型 接口"></a>泛型 接口</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">abstract class ABC&lt;T&gt; &#123;</span><br><span class="line">  addObject(String key);</span><br><span class="line">  setValue(String key, T value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实现泛型接口"><a href="#实现泛型接口" class="headerlink" title="实现泛型接口"></a>实现泛型接口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Wq&lt;T&gt; implements ABC&lt;T&gt; &#123;</span><br><span class="line">  @override</span><br><span class="line">  addObject(String key) &#123;&#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  setValue(String key, T value) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;方法添加泛型&quot;&gt;&lt;a href=&quot;#方法添加泛型&quot; class=&quot;headerlink&quot; title=&quot;方法添加泛型&quot;&gt;&lt;/a&gt;方法添加泛型&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    <category term="Dart" scheme="http://example.com/categories/Dart/"/>
    
    
  </entry>
  
  <entry>
    <title>Dart 多继承</title>
    <link href="http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%806/"/>
    <id>http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%806/</id>
    <published>2020-12-27T03:58:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class A &#123;</span><br><span class="line">  printA() &#123;</span><br><span class="line">    print(&#39;AAAAA&#39;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  run() &#123;</span><br><span class="line">    print(&#39;A run&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class B &#123;</span><br><span class="line">  printB() &#123;</span><br><span class="line">    print(&#39;BBBBBBBBB&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;&#x2F; B.bbb()&#123;&#125;    作为 minxins 的类不能有构造函数</span><br><span class="line"></span><br><span class="line">  run() &#123;</span><br><span class="line">    print(&#39;B run&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="mixins-混入"><a href="#mixins-混入" class="headerlink" title="mixins 混入"></a>mixins 混入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;MARK:   mixins 的必须是单独的一个object 类 A不能继承于其他类</span><br><span class="line">class Z with A, B &#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="继承-mixins-混入"><a href="#继承-mixins-混入" class="headerlink" title="继承 + mixins 混入"></a>继承 + mixins 混入</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class X extends Person with A, B &#123;</span><br><span class="line">  X.aa() : super.aa();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="A-和-B-共有的方法后继承的覆盖之前的"><a href="#A-和-B-共有的方法后继承的覆盖之前的" class="headerlink" title="A 和 B 共有的方法后继承的覆盖之前的"></a>A 和 B 共有的方法后继承的覆盖之前的</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="Dart" scheme="http://example.com/categories/Dart/"/>
    
    
  </entry>
  
  <entry>
    <title>Dart abstract 抽象类</title>
    <link href="http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%805/"/>
    <id>http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%805/</id>
    <published>2020-12-27T03:54:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="抽象类-相当于协议-接口"><a href="#抽象类-相当于协议-接口" class="headerlink" title="抽象类 相当于协议 接口"></a>抽象类 相当于协议 接口</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">abstract class Animal &#123;</span><br><span class="line">  &#x2F;&#x2F;抽象方法 只有方法名 没有具体实现</span><br><span class="line">  run();</span><br><span class="line"></span><br><span class="line">  String name;</span><br><span class="line"></span><br><span class="line">  getInfo() &#123;</span><br><span class="line">    print(&#39;普通方法&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Animal-an-Animal-抽象类-不能被实例化"><a href="#Animal-an-Animal-抽象类-不能被实例化" class="headerlink" title="Animal an = Animal();   //抽象类 不能被实例化"></a>Animal an = Animal();   //抽象类 不能被实例化</h2><h1 id="继承抽象类"><a href="#继承抽象类" class="headerlink" title="继承抽象类"></a>继承抽象类</h1><blockquote><p>继承自抽象类必须实现抽象方法     继承自抽象类的属性不是必须实现</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">class Dog extends Animal &#123;</span><br><span class="line">  @override</span><br><span class="line">  run() &#123;</span><br><span class="line">    print(&#39;小狗跑&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="implements-声明、with"><a href="#implements-声明、with" class="headerlink" title="implements 声明、with"></a>implements 声明、with</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">class Cat implements Animal &#123;</span><br><span class="line">  @override</span><br><span class="line">  getInfo() &#123;</span><br><span class="line">    print(&#39;我是🐱&#39;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  run() &#123;</span><br><span class="line">    print(&#39;小🐱跑的快&#39;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  @override</span><br><span class="line">  String name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Duck with Animal &#123;</span><br><span class="line">  @override</span><br><span class="line">  run() &#123;</span><br><span class="line">    print(&#39;小鸭跑&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;抽象类-相当于协议-接口&quot;&gt;&lt;a href=&quot;#抽象类-相当于协议-接口&quot; class=&quot;headerlink&quot; title=&quot;抽象类 相当于协议 接口&quot;&gt;&lt;/a&gt;抽象类 相当于协议 接口&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="Dart" scheme="http://example.com/categories/Dart/"/>
    
    
  </entry>
  
  <entry>
    <title>Dart 类的继承</title>
    <link href="http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%804/"/>
    <id>http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%804/</id>
    <published>2020-12-27T03:48:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">class Person &#123;</span><br><span class="line">  String name;</span><br><span class="line">  int age;</span><br><span class="line"></span><br><span class="line">  Person(this.name, this.age);</span><br><span class="line">  getInfo() &#123;</span><br><span class="line">    print(&#39;$name    ---   $age&#39;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  work() &#123;</span><br><span class="line">    print(&quot;object 努力学习&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="继承、重写父类方法"><a href="#继承、重写父类方法" class="headerlink" title="继承、重写父类方法"></a>继承、重写父类方法</h1><blockquote><p>使用 extends 关键字继承</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Zp extends Person &#123;</span><br><span class="line">  String sex;</span><br><span class="line">  Zp(String name, int age, [String sex &#x3D; &#39;男&#39;]) : super(name, age) &#123;</span><br><span class="line">    this.sex &#x3D; sex;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  faGongZi(&#123;int money&#125;) &#123;</span><br><span class="line">    print(&#39;发工资了 $money&#39;);</span><br><span class="line">    super.work();</span><br><span class="line">    work();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;MARK: 重写父类方法</span><br><span class="line">  @override</span><br><span class="line">  getInfo() &#123;</span><br><span class="line">    print(&#39;$name 今年 $age  很有钱&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="Dart" scheme="http://example.com/categories/Dart/"/>
    
    
  </entry>
  
  <entry>
    <title>Dart ？可选操作 类型判断、类型转换、联缀</title>
    <link href="http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%803/"/>
    <id>http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%803/</id>
    <published>2020-12-27T03:40:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="类"><a href="#类" class="headerlink" title="类"></a>类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">  String name;</span><br><span class="line">  int age;</span><br><span class="line">  getInfo() &#123;</span><br><span class="line">    print(&#39;名字：$name  年龄：$age&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="？-可选操作符"><a href="#？-可选操作符" class="headerlink" title="？ 可选操作符"></a>？ 可选操作符</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Person p2;</span><br><span class="line">&#x2F;&#x2F; p2.getInfo();  p2 未初始化  可使用 ？ 可选符操作</span><br><span class="line">&#x2F;&#x2F;MARK:     可选操作符</span><br><span class="line">p2?.getInfo();</span><br></pre></td></tr></table></figure><h1 id="is-操作符-类型判断"><a href="#is-操作符-类型判断" class="headerlink" title="is 操作符 类型判断"></a>is 操作符 类型判断</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var p1 &#x3D; Person();</span><br><span class="line">&#x2F;&#x2F;MARK: is  操作符    类型判断</span><br><span class="line">  if (p1 is Person) &#123;</span><br><span class="line">    print(&#39;p1 是 person&#39;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h1 id="as-操作符-类型转换"><a href="#as-操作符-类型转换" class="headerlink" title="as 操作符 类型转换"></a>as 操作符 类型转换</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var p3;</span><br><span class="line">p3 &#x3D; Person();</span><br><span class="line">&#x2F;&#x2F; p3.name;   虽然没报错  但是不知道 p3 类型</span><br><span class="line">(p3 as Person).name &#x3D; &#39;王麻子&#39;;</span><br><span class="line">(p3 as Person).age &#x3D; 11;</span><br><span class="line">(p3 as Person).getInfo();</span><br></pre></td></tr></table></figure><h1 id="联缀操作符"><a href="#联缀操作符" class="headerlink" title=".. 联缀操作符"></a>.. 联缀操作符</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; .. 联缀 操作符</span><br><span class="line">  Person p4 &#x3D; Person();</span><br><span class="line">  p4</span><br><span class="line">    ..name &#x3D; &#39;哈哈哈&#39;</span><br><span class="line">    ..age &#x3D; 40</span><br><span class="line">    ..getInfo();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;类&quot;&gt;&lt;a href=&quot;#类&quot; class=&quot;headerlink&quot; title=&quot;类&quot;&gt;&lt;/a&gt;类&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="Dart" scheme="http://example.com/categories/Dart/"/>
    
    
  </entry>
  
  <entry>
    <title>Dart 静态属性、静态方法</title>
    <link href="http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%802/"/>
    <id>http://example.com/2020/12/27/300-Dart%E5%9F%BA%E7%A1%802/</id>
    <published>2020-12-27T03:35:00.000Z</published>
    <updated>2021-01-14T07:08:53.641Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Person &#123;</span><br><span class="line">  &#x2F;&#x2F;MARK: 静态属性</span><br><span class="line">  static String name &#x3D; &#39;张三&#39;;</span><br><span class="line">  int age &#x3D; 20;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;MARK:静态方法</span><br><span class="line">  static getInfo() &#123;</span><br><span class="line">    print(name);</span><br><span class="line">    &#x2F;&#x2F; print(age);  静态方法内部不能反问非静态属性</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  printInfo() &#123;</span><br><span class="line">    &#x2F;&#x2F; 非静态方法 可以访问静态成员与非静态 包括方法</span><br><span class="line">    getInfo();</span><br><span class="line">    print(name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="Dart" scheme="http://example.com/categories/Dart/"/>
    
    
  </entry>
  
</feed>
